---@type LazySpec
return {
  -- Go debugging
  {
    "leoluz/nvim-dap-go",
    dependencies = { "mfussenegger/nvim-dap" },
    ft = "go",
    config = function(_, opts) require("dap-go").setup(opts) end,
  },
  -- Go development plugin
  {
    "ray-x/go.nvim",
    dependencies = {
      "ray-x/guihua.lua",
      "neovim/nvim-lspconfig",
      "nvim-treesitter/nvim-treesitter",
    },
    event = { "CmdlineEnter" },
    ft = { "go", "gomod" },
    build = ':lua require("go.install").update_all_sync()',
    opts = {
      -- –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      go = "go", -- –ø—É—Ç—å –∫ go binary
      goimports = "gopls", -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å gopls –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
      fillstruct = "gopls", -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å gopls –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä
      gofmt = "gofumpt", -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å gofumpt –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      max_line_len = 120, -- –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
      tag_transform = false, -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å snake_case –≤ json —Ç–µ–≥–∞—Ö
      test_template = "", -- —à–∞–±–ª–æ–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      test_template_dir = "", -- –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —à–∞–±–ª–æ–Ω–∞–º–∏ —Ç–µ—Å—Ç–æ–≤
      comment_placeholder = "   ", -- –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      test_runner = "go",
      run_in_floaterm = false, -- –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç—ã –≤ floating terminal
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–Ω—Ç–µ—Ä–∞
      linter = "golangci-lint",
      linter_flags = "",
      lint_prompt_style = "vt", -- —Å—Ç–∏–ª—å –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫ –ª–∏–Ω—Ç–µ—Ä–∞
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ª–∞–¥—á–∏–∫–∞
      dap_debug = true,
      dap_debug_gui = true,
      dap_debug_keymap = true, -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–µ–π–º–∞–ø–ø–∏–Ω–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è gopls
      gopls_cmd = nil, -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å gopls –∏–∑ PATH
      gopls_remote_auto = true,
      gocoverage_sign = "‚ñà",
      sign_priority = 5,
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ–≥–æ–≤
      tags_name = "json", -- –∏–º—è —Ç–µ–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      tags_options = { "json=omitempty" }, -- –æ–ø—Ü–∏–∏ –¥–ª—è —Ç–µ–≥–æ–≤
      tags_transform = "snakecase", -- —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–º–µ–Ω –≤ —Ç–µ–≥–∞—Ö
      tags_flags = { "-transform", "snakecase" },
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π
      trouble = false, -- –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å trouble.nvim
      test_efm = false, -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å efm-langserver
      luasnip = true,
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è mock –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      mock_timeout = 10000,
      mock_version = "",
      -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ icons (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Nerd Font)
      -- icons = {
      --   breakpoint = "üî¥",
      --   currentpos = "üî∑",
      -- },
    },
  },
  -- gRPC tools
  {
    "hudclark/grpc-nvim",
    dependencies = { "nvim-lua/plenary.nvim" },
  },
  -- PlantUML support
  {
    "https://gitlab.com/itaranto/plantuml.nvim",
    version = "*",
    config = function() require("plantuml").setup() end,
  },
  -- YANG syntax support
  { "nathanalderson/yang.vim" },
  -- Database tools
  { "tpope/vim-dadbod" },
  {
    "kristijanhusak/vim-dadbod-ui",
    dependencies = {
      { "tpope/vim-dadbod", lazy = true },
      { "kristijanhusak/vim-dadbod-completion", ft = { "sql", "mysql", "plsql", "clickhouse" }, lazy = true },
    },
    cmd = {
      "DBUI",
      "DBUIToggle",
      "DBUIAddConnection",
      "DBUIFindBuffer",
    },
    init = function()
      -- –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DBUI
      vim.g.db_ui_use_nerd_fonts = 1
      -- –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
      vim.g.db_ui_save_location = vim.fn.stdpath "config" .. "/db_ui"
      -- –ü—Ä–∏–º–µ—Ä—ã —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ë–î
      vim.g.dbs = {
        -- ClickHouse —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        {
          name = "ClickHouse Local",
          url = "clickhouse://default:@localhost:9000/default",
        },
      }
    end,
  },
  -- Git integration
  { "tpope/vim-fugitive" },
  -- Python virtual environment selector
  {
    "linux-cultist/venv-selector.nvim",
    dependencies = { "neovim/nvim-lspconfig" },
    opts = {
      name = {
        "venv",
        ".venv",
        ".env",
        "env",
      },
      search = true,
    },
    cmd = "VenvSelect",
  },
  -- Python debugging
  {
    "mfussenegger/nvim-dap-python",
    dependencies = { "mfussenegger/nvim-dap" },
    config = function()
      local dap_python = require "dap-python"
      dap_python.setup "~/.virtualenvs/debugpy/bin/python"
      dap_python.test_runner = "pytest"
    end,
    ft = "python",
  },
}
